{"ast":null,"code":"var _jsxFileName = \"/home/andrewruu/Development/code/phase3-project/phase3-app/src/components/AddReview.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddReview(_ref) {\n  _s();\n  let {\n    handleAddReview,\n    bookID\n  } = _ref;\n  console.log(bookID);\n  const [reviewObj, setReviewObj] = useState({\n    name: \"\",\n    comment: \"\",\n    score: \"\",\n    book_id: bookID\n  });\n  function handleChange(e) {\n    setReviewObj({\n      ...reviewObj,\n      [e.target.name]: e.target.value\n    });\n  }\n  function handelSubmit(e) {\n    e.preventDefault();\n    const newReview = {\n      name: reviewObj.name,\n      comment: reviewObj.comment,\n      score: reviewObj.score,\n      book_id: reviewObj.book_id\n    };\n    console.log(newReview);\n    fetch(\"http://localhost:9292/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newReview)\n    }).then(r => r.json()).then(data => {\n      handleAddReview(data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-book-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handelSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        label: \"name\",\n        value: reviewObj.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Comment \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"comment\",\n        label: \"comment\",\n        value: reviewObj.comment,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"score \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"score\",\n        label: \"score\",\n        value: reviewObj.score,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(AddReview, \"piRjGXW9GtQYnWTpbZueHBDKs9o=\");\n_c = AddReview;\nvar _c;\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"names":["React","useState","AddReview","handleAddReview","bookID","console","log","reviewObj","setReviewObj","name","comment","score","book_id","handleChange","e","target","value","handelSubmit","preventDefault","newReview","fetch","method","headers","body","JSON","stringify","then","r","json","data"],"sources":["/home/andrewruu/Development/code/phase3-project/phase3-app/src/components/AddReview.js"],"sourcesContent":["import React, {useState} from \"react\";\n\n\nexport default function AddReview({handleAddReview, bookID}) {\n\n    console.log(bookID)\n    const [reviewObj, setReviewObj]= useState({\n        name: \"\",\n        comment: \"\",\n        score: \"\",\n        book_id: bookID\n\n    })\n\n    function handleChange(e) {\n        setReviewObj({\n          ...reviewObj,\n          [e.target.name]: e.target.value,\n        })\n      }\n    \n    function handelSubmit(e){\n        e.preventDefault()\n        const newReview ={\n            name: reviewObj.name,\n            comment: reviewObj.comment,\n            score: reviewObj.score,\n            book_id: reviewObj.book_id\n        }\n        console.log(newReview)\n        fetch(\"http://localhost:9292/reviews\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newReview),\n          })\n            .then((r) => r.json())\n            .then(data => {handleAddReview(data)})\n    }\n\n\n    return (\n        <div className=\"add-book-form\">\n            <h1>Add Review</h1>\n            <form onSubmit={handelSubmit}>\n            <p>Name </p>\n                <input\n                type=\"text\"\n                name=\"name\"\n                label=\"name\"\n                value={reviewObj.name}\n                onChange={handleChange}/>\n            <p>Comment </p>\n                <input\n                type=\"text\"\n                name=\"comment\"\n                label=\"comment\"\n                value={reviewObj.comment}\n                onChange={handleChange}/>\n            <p>score </p>\n            <input\n                type=\"number\"\n                name=\"score\"\n                label=\"score\"\n                value={reviewObj.score}\n                onChange={handleChange}/>\n            \n            <br/>\n            <button type=\"submit\">submit</button>\n\n            </form>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAGtC,eAAe,SAASC,SAAS,OAA4B;EAAA;EAAA,IAA3B;IAACC,eAAe;IAAEC;EAAM,CAAC;EAEvDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAEP,QAAQ,CAAC;IACtCQ,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAER;EAEb,CAAC,CAAC;EAEF,SAASS,YAAY,CAACC,CAAC,EAAE;IACrBN,YAAY,CAAC;MACX,GAAGD,SAAS;MACZ,CAACO,CAAC,CAACC,MAAM,CAACN,IAAI,GAAGK,CAAC,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ;EAEF,SAASC,YAAY,CAACH,CAAC,EAAC;IACpBA,CAAC,CAACI,cAAc,EAAE;IAClB,MAAMC,SAAS,GAAE;MACbV,IAAI,EAAEF,SAAS,CAACE,IAAI;MACpBC,OAAO,EAAEH,SAAS,CAACG,OAAO;MAC1BC,KAAK,EAAEJ,SAAS,CAACI,KAAK;MACtBC,OAAO,EAAEL,SAAS,CAACK;IACvB,CAAC;IACDP,OAAO,CAACC,GAAG,CAACa,SAAS,CAAC;IACtBC,KAAK,CAAC,+BAA+B,EAAE;MACnCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,SAAS;IAChC,CAAC,CAAC,CACCO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAACG,IAAI,IAAI;MAAC1B,eAAe,CAAC0B,IAAI,CAAC;IAAA,CAAC,CAAC;EAC9C;EAGA,oBACI;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC1B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,eACnB;MAAM,QAAQ,EAAEZ,YAAa;MAAA,wBAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY,eACR;QACA,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM;QACX,KAAK,EAAC,MAAM;QACZ,KAAK,EAAEV,SAAS,CAACE,IAAK;QACtB,QAAQ,EAAEI;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACX;QACA,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,SAAS;QACd,KAAK,EAAC,SAAS;QACf,KAAK,EAAEN,SAAS,CAACG,OAAQ;QACzB,QAAQ,EAAEG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACb;QACI,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,OAAO;QACZ,KAAK,EAAC,OAAO;QACb,KAAK,EAAEN,SAAS,CAACI,KAAM;QACvB,QAAQ,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAE7B;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAE9B;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GAvEuBX,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}